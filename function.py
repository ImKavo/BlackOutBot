import logging
import aiogram.utils.markdown as md
from aiogram import Bot, Dispatcher, executor, types
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.dispatcher import FSMContext
from aiogram.types import ParseMode
from aiogram.dispatcher.filters import Text
from aiogram.dispatcher.filters.state import State, StatesGroup
from bot_config import API_KEY

logging.basicConfig(level=logging.INFO)

bot = Bot(token=API_KEY)

# Initializing a memory storage
storage = MemoryStorage()
dp = Dispatcher(bot, storage=storage)


# –í—Ö–æ–¥–Ω–∞—è —Ç–æ—á–∫–∞ –¥–∏–∞–ª–æ–≥–∞
@dp.message_handler(commands=['start', 'help'])
async def command_start(message: types.Message):
    """
    Conversation's entry point
    """
    await bot.send_message(message.chat.id, '–ü—Ä–∏–≤—ñ—Ç, {user}! üëã'.format(user=message.from_user.full_name))

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, selective=True, one_time_keyboard=True)
    markup.add("–ú–∞–≥–∞–∑–∏–Ω üõí", "–ü—Ä–æ –Ω–∞—Å ‚ùî")

    await bot.send_message(message.chat.id, '–¶–µ–π –±–æ—Ç –¥–æ–ø–æ–º–æ–∂–µ —Ç–æ–±—ñ –ø—Ä–∏ –±–ª–µ–∫–∞—É—Ç–∞—Ö!\n'
                                            '–ó—ñ–≥—Ä—ñ–π—Å—è, –∑–∞–ª–∏—à–∞–π—Å—è –∑ –Ü–Ω—Ç–µ—Ä–Ω–µ—Ç–æ–º —Ç–∞ –µ–ª–µ–∫—Ç—Ä–æ–µ–Ω–µ—Ä–≥—ñ—î—é!', reply_markup=markup)


@dp.message_handler(lambda message: message.text in ["–ú–µ–Ω—é üö™"])
async def cmd_shop(message: types.Message):
    """
    Menu button
    """
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, selective=True, one_time_keyboard=True)
    markup.add("–ú–∞–≥–∞–∑–∏–Ω üõí", "–ü—Ä–æ –Ω–∞—Å ‚ùî")
    await bot.send_message(message.chat.id, "–í–∏—Ö—ñ–¥ —É –º–µ–Ω—é...", reply_markup=markup)


@dp.message_handler(lambda message: message.text in ["–ú–∞–≥–∞–∑–∏–Ω üõí", "üîô–ú–∞–≥–∞–∑–∏–Ω üõí", "–°–∫–∞—Å—É–≤–∞—Ç–∏ ‚ùå"])
async def cmd_shop(message: types.Message):
    """
    Shop entry point
    """
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, selective=True, one_time_keyboard=True)
    markup.add("–ó–∞—Ä—è–¥–Ω—ñ —Å—Ç–∞–Ω—Ü—ñ—ó üîã", "Starlink üí´", "–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è ü§ù", "–ú–µ–Ω—é üö™")
    await bot.send_message(message.chat.id, "–õ–∞—Å–∫–∞–≤–æ –ø—Ä–æ—Å–∏–º–æ –≤ –Ω–∞—à –º–∞–≥–∞–∑–∏–Ω!", reply_markup=markup)


@dp.message_handler(lambda message: message.text in ["–ó–∞—Ä—è–¥–Ω—ñ —Å—Ç–∞–Ω—Ü—ñ—ó üîã"])
async def cmd_charging_stations(message: types.Message):
    """
    Charging stations choice
    """
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, selective=True, one_time_keyboard=True)
    markup.add("Ecoflow Delta 2", "Ecoflow Delta Pro", "Ecoflow River 2",
               "Ecoflow River 2 Max", "Ecoflow River 2 Pro", "üîô–ú–∞–≥–∞–∑–∏–Ω üõí")

    # Ecoflow Delta 2
    await bot.send_photo(chat_id=message.chat.id, photo=open('media/ecoflow_delta2.png', 'rb'))
    await bot.send_message(message.chat.id, "Ecoflow Delta 2 ‚¨ÜÔ∏è\n52.600‚Ç¥", reply_markup=markup)

    # Ecoflow Delta Pro
    await bot.send_photo(chat_id=message.chat.id, photo=open('media/ecoflow_deltapro.png', 'rb'))
    await bot.send_message(message.chat.id, "Ecoflow Delta Pro ‚¨ÜÔ∏è\n157.000‚Ç¥", reply_markup=markup)

    # Ecoflow River 2
    await bot.send_photo(chat_id=message.chat.id, photo=open('media/ecoflow_river2.png', 'rb'))
    await bot.send_message(message.chat.id, "Ecoflow River 2 ‚¨ÜÔ∏è\n15.700‚Ç¥", reply_markup=markup)

    # Ecoflow River 2 Max
    await bot.send_photo(chat_id=message.chat.id, photo=open('media/ecoflow_river2max.png', 'rb'))
    await bot.send_message(message.chat.id, "Ecoflow River 2 Max ‚¨ÜÔ∏è\n28.700‚Ç¥", reply_markup=markup)

    # Ecoflow River 2 Pro
    await bot.send_photo(chat_id=message.chat.id, photo=open('media/ecoflow_river2pro.png', 'rb'))
    await bot.send_message(message.chat.id, "Ecoflow River 2 Pro ‚¨ÜÔ∏è\n36.500‚Ç¥", reply_markup=markup)


@dp.message_handler(lambda message: message.text in ["Starlink üí´"])
async def cmd_starlink(message: types.Message):
    """
    Starlink choice
    """
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, selective=True, one_time_keyboard=True)
    markup.add("Starlink 2 gen.", "üîô–ú–∞–≥–∞–∑–∏–Ω üõí")
    # Starlink 2 gen.
    await bot.send_photo(chat_id=message.chat.id, photo=open('media/starlink_2gen.png', 'rb'))
    await bot.send_message(message.chat.id, "Starlink 2 gen. ‚¨ÜÔ∏è\n36.000‚Ç¥", reply_markup=markup)


@dp.message_handler(lambda message: message.text in ["Ecoflow Delta 2", "Ecoflow Delta Pro", "Ecoflow River 2",
                                                     "Ecoflow River 2 Max", "Ecoflow River 2 Pro", "Starlink 2 gen."])
async def cmd_checkout(message: types.Message):
    """
    Checkout function
    """
    product = message.text
    if product == "Ecoflow Delta 2":
        product_price = "52.600‚Ç¥"
    elif product == "Ecoflow Delta Pro":
        product_price = "157.000‚Ç¥"
    elif product == "Ecoflow River 2":
        product_price = "15.700‚Ç¥"
    elif product == "Ecoflow River 2 Max":
        product_price = "28.700‚Ç¥"
    elif product == "Ecoflow River 2 Pro":
        product_price = "36.500‚Ç¥"
    elif product == "Starlink 2 gen.":
        product_price = "36.000‚Ç¥"

    await bot.send_message(message.chat.id, 'üî≤---- –ú—ñ–π —á–µ–∫ ----üî≤\n'
                                            '–ü—Ä–æ–¥—É–∫—Ç: {product}\n'
                                            '–¶—ñ–Ω–∞: {product_price}\n'
                                            'üî≤----------------üî≤'.format(product=message.text, product_price=product_price))

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, selective=True, one_time_keyboard=True)
    markup.add("–ü—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏ ‚úÖ", "–°–∫–∞—Å—É–≤–∞—Ç–∏ ‚ùå", "üîô–ú–∞–≥–∞–∑–∏–Ω üõí", "–ú–µ–Ω—é üö™")

    await bot.send_message(message.chat.id, '–ß–∏ –≤—Å–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ? ü§î', reply_markup=markup)


@dp.message_handler(lambda message: message.text in ["–ü—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏ ‚úÖ"])
async def cmd_checkout_yes(message: types.Message):
    """
    Checkout confirmed
    """
    await bot.send_message(message.chat.id, "–î—è–∫—É—î–º–æ!\n"
                                            "–¢–µ–ø–µ—Ä –ø–µ—Ä–µ—à–ª—ñ—Ç—å –í–∞—à —á–µ–∫ –Ω–∞—à–æ–º—É –∞–¥–º—ñ–Ω—É, "
                                            "—Ç–∞ –¥–æ–º–æ–≤—Ç–µ—Å—è —â–æ–¥–æ –æ–ø–ª–∞—Ç–∏ —Ç–∞ –¥–æ—Å—Ç–∞–≤–∫–∏:")
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, selective=True, one_time_keyboard=True)
    markup.add("–ú–µ–Ω—é üö™")
    await bot.send_message(message.chat.id, "https://t.me/illiakoshel", reply_markup=markup)


@dp.message_handler(lambda message: message.text in ["–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è ü§ù"])
async def cmd_personal_order(message: types.Message):
    """
    Personal order
    """
    await bot.send_message(message.chat.id, "–ö–æ–Ω—Ç–∞–∫—Ç –¥–ª—è –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∏—Ö –∑–∞–º–æ–≤–ª–µ–Ω—å:")
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, selective=True, one_time_keyboard=True)
    markup.add("–ú–µ–Ω—é üö™")
    await bot.send_message(message.chat.id, "https://t.me/illiakoshel", reply_markup=markup)


@dp.message_handler(lambda message: message.text in ["–ü—Ä–æ –Ω–∞—Å ‚ùî"])
async def cmd_about_us(message: types.Message):
    """
    About us button action
    """
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, selective=True, one_time_keyboard=True)
    markup.add("–ú–∞–≥–∞–∑–∏–Ω üõí", "–ü—Ä–æ –Ω–∞—Å ‚ùî")
    await bot.send_message(message.chat.id, "–ù–∞—à–∞ –º—ñ—Å—ñ—è - –¥–æ–ø–æ–º–æ–≥–∞—Ç–∏ —É–∫—Ä–∞—ó–Ω—Ü—è–º —É —Å–∫—Ä—É—Ç–Ω—ñ —á–∞—Å–∏ ü´∂\n"
                                            "–¢–æ–º—É –º–∏ –∫—É–ø–ª—è—î–º–æ —Ä—ñ–∑–Ω–µ –ø—Ä–∏–ª–∞–¥–¥—è —Ç–∞ –ø—Ä–æ–¥–∞—î–º–æ –π–æ–≥–æ –∑–∞ –º—ñ–Ω—ñ–º–∞–ª—å–Ω–∏–º–∏ —Ü—ñ–Ω–∞–º–∏.\n"
                                            "–¢–∞–∫–æ–∂, 10% –∑ –Ω–∞—à–æ–≥–æ –ø—Ä–∏–±—É—Ç–∫—É –π–¥—É—Ç—å –Ω–∞ –¥–æ–ø–æ–º–æ–≥—É –ó–°–£ - "
                                            "–∫—É–ø–ª—è—é—á–∏ —á–µ—Ä–µ–∑ —Ü—å–æ–≥–æ –±–æ—Ç–∞, –í–∏ –¥–æ–ø–æ–º–∞–≥–∞—î—Ç–µ –Ω–∞—à—ñ–π –∞—Ä–º—ñ—ó! üí™üá∫üá¶\n"
                                            "–©–æ–¥–æ —è–∫–æ—Å—Ç—ñ - –º–∏ –¥–∞—î–º–æ –¥–æ–≤–≥–æ—Å—Ä–æ—á–Ω—ñ –≥–∞—Ä–∞–Ω—Ç—ñ—ó –Ω–∞ –ø—Ä–æ–¥—É–∫—Ç–∏ –∑ –Ω–∞—à–æ–≥–æ "
                                            "–º–∞–≥–∞–∑–∏–Ω—É —Ç–∞ —Ä–æ–±–∏–º–æ –≤—Å–µ, —â–æ –≤ –Ω–∞—à–∏—Ö —Å–∏–ª–∞—Ö, —â–æ–± –≤—Å–µ –ø—Ä–∞—Ü—é–≤–∞–ª–æ –∫–æ—Ä–µ–∫—Ç–Ω–æ.\n"
                                            "–ê –º–∞–≥–∞–∑–∏–Ω —É –≤–∏–≥–ª—è–¥—ñ —Ç–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç–∞ - "
                                            "—Ü–µ, –Ω–∞ –Ω–∞—à—É –¥—É–º–∫—É, –¥—É–∂–µ —Å—É—á–∞—Å–Ω–æ —Ç–∞ –∑—Ä—É—á–Ω–æ –¥–ª—è –Ω–∞—à–∏—Ö –∫–ª—ñ—î–Ω—Ç—ñ–≤ üíõ\n\n"
                                            "–£ —Ä–∞–∑—ñ –≤–∏–Ω–∏–∫–Ω–µ–Ω–Ω—è —Å–∫–ª–∞–¥–Ω–æ—â—ñ–≤ —Ç–∞ –ø–∏—Ç–∞–Ω—å:\n"
                                            "‚úàÔ∏è–¢–µ–ª–µ–≥—Ä–∞–º: @illiakoshel –∞–±–æ @kavooo_q\n"
                                            "üìû–¢–µ–ª–µ—Ñ–æ–Ω: +380993705838\n"
                                            "ü§ñ–†–æ–∑—Ä–æ–±–Ω–∏–∫ –±–æ—Ç–∞: @kavooo_q", reply_markup=markup)


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –±–æ—Ç–∞
@dp.message_handler(commands=['test'])
async def comm_test(message: types.Message):
    """
    Command to test the bot state
    """
    await bot.send_message(message.chat.id, "The state is normal")


if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)